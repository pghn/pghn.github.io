[
  
  {
    "title": "xv6分析与实验",
    "url": "/posts/xv6%E5%88%86%E6%9E%90%E4%B8%8E%E5%AE%9E%E9%AA%8C/",
    "categories": "复习, 操作系统",
    "tags": "",
    "date": "2024-01-03 21:28:00 +0800",
    





    
    "snippet": "前言入职之前打算&amp;必须把计算机基础知识过一遍，xv6系列是为了全面复习操作系统，跟随《操作系统原型——xv6分析与实验》重新学一遍，一些自己已经比较熟悉的（比如xv6开发环境本身的配置）会写得较简单。xv6课程本身已经全面转向xv6-riscv，但依然选用xv6-public，只是为了图方便。第一节首先要完成xv6调试环境的配置，包括QEMU，GDB，以及源码build tool-c...",
    "content": "前言入职之前打算&amp;必须把计算机基础知识过一遍，xv6系列是为了全面复习操作系统，跟随《操作系统原型——xv6分析与实验》重新学一遍，一些自己已经比较熟悉的（比如xv6开发环境本身的配置）会写得较简单。xv6课程本身已经全面转向xv6-riscv，但依然选用xv6-public，只是为了图方便。第一节首先要完成xv6调试环境的配置，包括QEMU，GDB，以及源码build tool-chain, 这里实验对象为xv6-public，不是xv6-riscv, 目标平台为”x86 elf machine(like Linux or FreeBSD)”， 需要完成以下操作  安装qemu， 确保 qemu-system-i386 或者 qemu-system-x86_64 能够执行  build xv6, 确定能够make 成功安装qemuubuntu 环境下非常简单sudo apt update &amp;&amp; sudo apt install qemu qemu-system-x86# qemu-system-x86_64 --version# QEMU emulator version 6.2.0 (Debian 1:6.2+dfsg-2ubuntu6.15)# Copyright (c) 2003-2021 Fabrice Bellard and the QEMU Project developersbuild xv6先把xv6仓库克隆下来，然后安装build-essential, 直接make qemu，在qemu界面ctrl+p查看进程信息绑定gdb调试时make qemu-gdb, MakeFile全都写好了，gdb调试的端口号在MakeFile中有写，执行过程的最后一句也能直接看到，当前是26000, .gdbinit文件带来的安全警告自行解决多核调试gdb中使用i thread 查看不同cpu的状态， 使用thread apply [ID list] command 控制不同的线程执行gdb命令, 通过更改Makefile中 令CPUS := 3完成3线程启动"
  }
  
]

